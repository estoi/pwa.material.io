{"version":3,"sources":["serviceWorker.js","redux/modules/home/index.js","redux/reducers/index.js","redux/index.js","components/ui-header/Header.js","components/ui-scroll/Scroll.js","components/ui-content/Content.js","components/ui-nav-bar/NavBar.js","App.js","pages/home/Home.js","pages/mine/Mine.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","home","action","type","createStore","combineReducers","reducers","applyMiddleware","thunk","Component","Scroll","initScroll","direction","props","wrapper","document","querySelector","BScroll","scrollX","click","scrollY","this","children","className","defaultProps","Header","hasHeader","hasNavBar","cls","classnames","NavBar","value","url","setState","path","history","push","options","label","icon","BottomNavigation","onChange","event","newValue","map","i","k","BottomNavigationAction","onClick","barClick","key","showLabel","Home","Button","color","variant","Mine","hasNavbar","ReactDOM","render","store","useHistory","to","component","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aef4ee30.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};\n","\nimport home from '../modules/home'\n\nexport default {\n    home\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nexport default createStore(\n    combineReducers({\n        ...reducers\n    }),\n    applyMiddleware(thunk)\n);","import React, { Component } from 'react';\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"ui-header-wrap\">\n\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BScroll from 'better-scroll';\n\nexport default class Scroll extends Component {\n\n    static propTypes = {\n        direction: PropTypes.string,\n        children: PropTypes.any\n    }\n\n    static defaultProps = {\n        direction: 'vertical', // 滚动方向 默认竖向滚动\n    };\n\n    componentDidMount() {\n        this.initScroll();\n    }\n\n    initScroll = () => {\n        const { direction } = this.props;\n        const wrapper = document.querySelector('.wrapper');\n        const scroll = new BScroll(wrapper, {\n            scrollX: direction !== 'vertical',  //横向滚动\n            click: true,  // better-scroll 默认会阻止浏览器的原生 click 事件\n            scrollY: direction === 'vertical', //竖向滚动\n          })\n    }\n\n    render() {\n        const { children } = this.props\n        return (\n            <div className=\"wrapper\">\n                <div>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport Scroll from '../ui-scroll/Scroll';\n\nexport default class Header extends Component {\n\n    static propTypes = {\n        hasHeader: PropTypes.bool,\n        hasNavBar: PropTypes.bool,\n        children: PropTypes.any\n    }\n\n    static defaultProps = {\n        hasHeader: false,\n        hasNavBar: false\n    }; \n\n    render() {\n        const { hasHeader, hasNavBar, children } = this.props;\n        const cls = classnames('ui-content-wrap',{'has-header': hasHeader, 'has-nav-bar': hasNavBar, 'has-all': hasHeader && hasNavBar});\n        return (\n            <div className={cls}>\n                <Scroll direction=\"vertical\">\n                    {children}\n                </Scroll>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport HomeSharp from '@material-ui/icons/HomeSharp';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport FavoriteSharp from '@material-ui/icons/FavoriteSharp';\nimport PersonSharp from '@material-ui/icons/PersonSharp';\n\nexport default class NavBar extends Component {\n    static propTypes = {\n    }\n\n    static defaultProps = {\n    };\n\n    state = {\n        value: ''\n    }\n\n    componentDidMount() {\n        const { match: { url } } = this.props;\n        this.setState({\n            value: url\n        })\n    }\n\n    // 导航点击事件\n    barClick(path) {\n        const { history } = this.props;\n        history.push(path)\n    }\n\n    render() {\n        const { value } = this.state;\n\n        const options = [\n            {\n                label: '首页',\n                icon: <HomeSharp />,\n                path: '/home'\n            },\n            {\n                label: '购买',\n                icon: <AddCircle />,\n                path: '/pay'\n            },\n            {\n                label: '服务',\n                icon: <FavoriteSharp />,\n                path: '/server'\n            },\n            {\n                label: '个人中心',\n                icon: <PersonSharp />,\n                path: '/mine'\n            }\n        ];\n        return (\n            <div className=\"ui-nav-bar-wrap\">\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        this.setState({value: newValue})\n                    }}\n                >\n                    {\n                        options?\n                        options.map((i, k) => {\n                            return (\n                                <BottomNavigationAction onClick={() => this.barClick(i.path)} key={k} showLabel={value === i.path} label={i.label} value={i.path} icon={i.icon? i.icon: null}>\n                                    \n                                </BottomNavigationAction>\n                            );\n                        })\n                        :\n                        null\n                    }\n                </BottomNavigation>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Home from '@material-ui/icons/Home';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport FavoriteSharp from '@material-ui/icons/FavoriteSharp';\nimport PersonSharp from '@material-ui/icons/PersonSharp';\n\nimport { Header, Content, NavBar } from './components';\n\nexport default class App extends Component {\n\n    render() {\n        const { children } = this.props;\n\n        const options = [\n            {\n                label: '首页',\n                icon: <Home />\n            },\n            {\n                label: '购买',\n                icon: <AddCircle />\n            },\n            {\n                label: '服务',\n                icon: <FavoriteSharp />\n            },\n            {\n                label: '个人中心',\n                icon: <PersonSharp />\n            }\n        ];\n\n        return (\n            <div className=\"root-app\">\n                {/* <Header></Header> */}\n                <Content hasNavBar>\n                    {children}\n                </Content>\n                <NavBar options={options}></NavBar>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport { Content, NavBar } from '../../components';\n\nexport default class Home extends Component {\n\n    render() {\n\n\n        return (\n            <div className=\"home-warp\">\n                <Content hasNavBar>\n                    <Button color=\"primary\" variant=\"contained\">Home</Button>\n                </Content>\n                <NavBar {...this.props} />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport { Content, NavBar } from '../../components';\n\nexport default class Mine extends Component {\n\n    render() {\n\n\n        return (\n            <div className=\"home-warp\">\n                <Content hasNavbar>\n                    <Button color=\"primary\" variant=\"contained\">Mine</Button>\n                </Content>\n                <NavBar {...this.props} />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Redirect, useHistory } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n/**\n * redux\n */\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\n// import App from './App';\n\n/**\n * pages\n */\nimport App from './App';\nimport Home from './pages/home/Home';\nimport Mine from './pages/mine/Mine';\n\n/**\n * style\n */\nimport 'normalize.css';\nimport './resource/styles/reset.less';\nimport './resource/styles/public.less';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter useHistory={useHistory}>\n            <Redirect path=\"/\" to=\"/home\" />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/mine\" component={Mine} />\n        </HashRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}